@startuml C4_Component
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

title Component diagram for Core Service

Container(apiGateway, "API Gateway", "API Gateway Technology", "Routes requests to appropriate services")
Container(apiLayer, "API Layer", "API Technology", "Provides unified API for clients")
ContainerDb(database, "Database", "Database Technology", "Stores system information")
System_Ext(externalSystem1, "External System A", "Provides supporting service A")
System_Ext(externalSystem2, "External System B", "Provides supporting service B")

Container_Boundary(coreService, "Core Service") {
    Component(domainAResolver, "Domain A Resolver", "API Resolver", "Handles Domain A API operations")
    Component(domainBResolver, "Domain B Resolver", "API Resolver", "Handles Domain B API operations")
    Component(domainAService, "Domain A Service", "Business Logic", "Handles Domain A business logic")
    Component(domainBService, "Domain B Service", "Business Logic", "Handles Domain B business logic")
    Component(integrationService, "Integration Service", "Service", "Handles external integration logic")
    Component(externalAdapter, "External Adapter", "Adapter", "Adapts to external system APIs")
    Component(domainARepository, "Domain A Repository", "Data Access", "Provides data access for Domain A")
    Component(domainBRepository, "Domain B Repository", "Data Access", "Provides data access for Domain B")
}

Rel(apiLayer, domainAResolver, "Delegates Domain A operations to")
Rel(apiLayer, domainBResolver, "Delegates Domain B operations to")

Rel(domainAResolver, domainAService, "Uses")
Rel(domainBResolver, domainBService, "Uses")

Rel(domainAService, domainARepository, "Uses")
Rel(domainAService, integrationService, "Uses")
Rel(domainAService, externalAdapter, "Uses")
Rel(domainBService, domainBRepository, "Uses")

Rel(domainARepository, database, "Reads from and writes to")
Rel(domainBRepository, database, "Reads from and writes to")
Rel(integrationService, externalSystem1, "Integrates with")
Rel(externalAdapter, externalSystem2, "Connects to")

@enduml
