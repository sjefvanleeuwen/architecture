@startuml C4_Deployment
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml

LAYOUT_WITH_LEGEND()

title Deployment diagram for Order Management System

Deployment_Node(customerDevice, "Customer Device", "Computer or Mobile") {
    Deployment_Node(browser, "Web Browser", "Chrome, Firefox, Safari") {
        Container(webAppInstance, "Web Application", "ASP.NET Core Blazor", "Provides functionality to customers via web interface")
    }
    Deployment_Node(mobileRuntime, "Mobile App", "iOS/Android") {
        Container(mobileAppInstance, "Mobile App", "Xamarin/.NET MAUI", "Provides functionality to customers via mobile")
    }
}

Deployment_Node(cloudProvider, "Cloud Provider", "Microsoft Azure") {
    Deployment_Node(apiManagement, "API Management", "Azure Service") {
        Container(apiGatewayInstance, "API Gateway", "Azure API Management", "Routes requests to appropriate services")
    }
    Deployment_Node(appServicePlan, "App Service Plan", "Premium Tier") {
        Deployment_Node(graphqlAppService, "GraphQL API", "App Service") {
            Container(graphqlApiInstance, "GraphQL API", "Hot Chocolate/.NET", "Provides unified GraphQL schema for clients")
        }
        Deployment_Node(authAppService, "Authentication Service", "App Service") {
            Container(authServiceInstance, "Authentication Service", "ASP.NET Core Identity/Azure AD B2C", "Handles user authentication and authorization")
        }
        Deployment_Node(coreAppService, "Core Service", "App Service") {
            Container(coreServiceInstance, "Core Service", ".NET 7", "Implements core business logic")
        }
    }
    Deployment_Node(serviceBus, "Azure Service Bus", "Standard Tier") {
        Container(serviceBusInstance, "Message Bus", "Azure Service Bus", "Handles asynchronous communication between services")
    }
    Deployment_Node(cosmosDbAccount, "Cosmos DB Account", "Multi-region") {
        Deployment_Node(cosmosDbPrimary, "Primary Region", "East US") {
            ContainerDb(dbPrimaryInstance, "Cosmos DB", "Azure Cosmos DB", "Stores user, product, and order information")
        }
        Deployment_Node(cosmosDbSecondary, "Secondary Region", "West US") {
            ContainerDb(dbSecondaryInstance, "Cosmos DB Replica", "Azure Cosmos DB", "Read replica")
        }
    }
    Deployment_Node(azureMonitor, "Azure Monitor", "Monitoring Service") {
        Container(appInsights, "Application Insights", "Azure Service", "Application monitoring and analytics")
    }
}

Deployment_Node(externalSystems, "External Systems", "Third Party") {
    System_Ext(emailSystemInstance, "Email System", "Azure Communication Services")
    System_Ext(paymentSystemInstance, "Payment System", "Processes payments")
}

Rel(webAppInstance, graphqlApiInstance, "Makes GraphQL queries to", "HTTPS")
Rel(mobileAppInstance, graphqlApiInstance, "Makes GraphQL queries to", "HTTPS")
Rel(apiGatewayInstance, graphqlApiInstance, "Routes requests to")
Rel(graphqlApiInstance, coreServiceInstance, "Calls")
Rel(graphqlApiInstance, authServiceInstance, "Authenticates with")
Rel(coreServiceInstance, dbPrimaryInstance, "Reads from and writes to")
Rel(coreServiceInstance, serviceBusInstance, "Publishes messages to")
Rel(serviceBusInstance, emailSystemInstance, "Triggers notifications in")
Rel(coreServiceInstance, paymentSystemInstance, "Makes payments using")
Rel(dbPrimaryInstance, dbSecondaryInstance, "Replicates to")

@enduml
