@startuml C4_Container
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

title Container diagram for Example System

Person(user, "User", "A user of the system")
System_Ext(externalSystem1, "External System A", "Provides supporting service A")
System_Ext(externalSystem2, "External System B", "Provides supporting service B")

System_Boundary(systemBoundary, "Example System") {
    Container(webApp, "Web Application", "Web Framework", "Provides functionality to users via web interface")
    Container(mobileApp, "Mobile App", "Mobile Framework", "Provides functionality to users via mobile")
    Container(apiGateway, "API Gateway", "API Gateway", "Routes requests to appropriate services")
    Container(apiLayer, "API Layer", "API Technology", "Provides unified API for clients")
    Container(authService, "Authentication Service", "Auth Technology", "Handles user authentication and authorization")
    Container(coreService, "Core Service", "Service Technology", "Implements core business logic")
    ContainerDb(database, "Database", "Database Technology", "Stores system information")
    Container(messaging, "Message Bus", "Messaging Technology", "Handles asynchronous communication between services")
}

Rel(user, webApp, "Uses", "HTTPS")
Rel(user, mobileApp, "Uses")
Rel(webApp, apiLayer, "Makes API calls to", "HTTPS")
Rel(mobileApp, apiLayer, "Makes API calls to", "HTTPS")
Rel(apiLayer, apiGateway, "Routes requests through")
Rel(apiGateway, authService, "Routes auth requests to")
Rel(apiGateway, coreService, "Routes business requests to")
Rel(authService, database, "Reads from and writes to")
Rel(coreService, database, "Reads from and writes to")
Rel(coreService, messaging, "Publishes messages to")
Rel(messaging, externalSystem1, "Triggers notifications")
Rel(coreService, externalSystem2, "Integrates with")

@enduml
